[
  {
    "id": "Array_Description",
    "content": "An array is a collection of items stored at contiguous memory locations. This is the simplest implementation of a data structure containing only a <i>buffer</i> and a <i>length</i> fixed variable."
  },
  {
    "id": "Circular_Buffer_Description",
    "content": "Circular buffers are fixed-size buffers that work as if the memory is contiguous and circular in nature. <i>Head</i> and <i>Tail</i> pointers are adjusted to simulate a circular structure."
  },
  {
    "id": "Dynamic_Array_Description",
    "content": "New description for Dynamic Array"
  },
  {
    "id": "Hash_Map_Description",
    "content": "New description for Hash Map"
  },
  {
    "id": "Hash_Set_Description",
    "content": "New description for Hash Set"
  },
  {
    "id": "Circular_Linked_List_Description",
    "content": "New description for Circular Linked List"
  },
  {
    "id": "Doubly_Linked_List_Description",
    "content": "New description for Doubly Linked List"
  },
  {
    "id": "Singly_Linked_List_Description",
    "content": "New description for Singly Linked List"
  },
  {
    "id": "Skip_List_Description",
    "content": "The Skip List has not been implemented yet!"
  },
  {
    "id": "Deque_Description",
    "content": "A Deque is a double-ended Queue."
  },
  {
    "id": "Deque_Array_Description",
    "content": "A Deque Array is an implementation of a Deque using a buffer to store its data."
  },
  {
    "id": "Priority_Queue_Description",
    "content": "New description for Priority Queue"
  },
  {
    "id": "Queue_Description",
    "content": "New description for Queue"
  },
  {
    "id": "Queue_Array_Description",
    "content": "New description for Queue Array"
  },
  {
    "id": "Stack_Description",
    "content": "New description for Stack"
  },
  {
    "id": "Stack_Array_Description",
    "content": "New description for Stack Array"
  },
  {
    "id": "AVL_Tree_Description",
    "content": "New description for AVL Tree"
  },
  {
    "id": "Binary_Search_Tree_Description",
    "content": "New description for Binary Search Tree"
  },
  {
    "id": "Binary_Heap_Description",
    "content": "New description for Binary Heap"
  },
  {
    "id": "Priority_Heap_Description",
    "content": "New description for Priority Heap"
  },
  {
    "id": "Red-Black_Tree_Description",
    "content": "New description for Red-Black Tree"
  },
  {
    "id": "Splay_Tree_Description",
    "content": "New description for Splay Tree"
  }
]